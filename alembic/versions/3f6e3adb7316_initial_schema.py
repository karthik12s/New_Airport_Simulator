"""initial schema

Revision ID: 3f6e3adb7316
Revises: 
Create Date: 2025-07-29 22:05:06.140230

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3f6e3adb7316'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('airline_counter',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('airline', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('airport',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('code', sa.String(), nullable=True),
    sa.Column('location', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code')
    )
    op.create_table('airport_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flight',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('airline', sa.String(), nullable=True),
    sa.Column('flight_code', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('airline_staff',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('airline', sa.String(), nullable=True),
    sa.Column('counter_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['counter_id'], ['airline_counter.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('runways',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(), nullable=False),
    sa.Column('length', sa.Integer(), nullable=False),
    sa.Column('surface_type', sa.String(), nullable=False),
    sa.Column('airport_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['airport_id'], ['airport.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('terminal',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('number', sa.String(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('airport_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['airport_id'], ['airport.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('airport_staff',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('role', sa.String(), nullable=True),
    sa.Column('terminal_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['terminal_id'], ['terminal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('baggage_belt',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('terminal_id', sa.UUID(), nullable=True),
    sa.Column('start_code', sa.String(), nullable=True),
    sa.Column('end_code', sa.String(), nullable=True),
    sa.Column('is_domestic', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['terminal_id'], ['terminal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gate',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('terminal_id', sa.UUID(), nullable=True),
    sa.Column('start_code', sa.String(), nullable=True),
    sa.Column('end_code', sa.String(), nullable=True),
    sa.Column('is_domestic', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['terminal_id'], ['terminal.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('flight_instance',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('flight_id', sa.UUID(), nullable=True),
    sa.Column('departure_time', sa.DateTime(), nullable=True),
    sa.Column('arrival_time', sa.DateTime(), nullable=True),
    sa.Column('gate_id', sa.UUID(), nullable=True),
    sa.Column('baggage_belt_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['baggage_belt_id'], ['baggage_belt.id'], ),
    sa.ForeignKeyConstraint(['flight_id'], ['flight.id'], ),
    sa.ForeignKeyConstraint(['gate_id'], ['gate.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('gate_baggage_history',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=True),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('action', sa.String(), nullable=True),
    sa.Column('performed_by', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['performed_by'], ['airport_staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('passenger',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('passport_number', sa.String(), nullable=True),
    sa.Column('nationality', sa.String(), nullable=True),
    sa.Column('boarding_pass_issued', sa.Boolean(), nullable=True),
    sa.Column('flight_instance_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['flight_instance_id'], ['flight_instance.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('table_name')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='users_pkey')
    )
    op.create_table('table_name',
    sa.Column('id', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1, maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='table_name_pkey')
    )
    op.drop_table('passenger')
    op.drop_table('gate_baggage_history')
    op.drop_table('flight_instance')
    op.drop_table('gate')
    op.drop_table('baggage_belt')
    op.drop_table('airport_staff')
    op.drop_table('terminal')
    op.drop_table('runways')
    op.drop_table('airline_staff')
    op.drop_table('flight')
    op.drop_table('airport_type')
    op.drop_table('airport')
    op.drop_table('airline_counter')
    # ### end Alembic commands ###
